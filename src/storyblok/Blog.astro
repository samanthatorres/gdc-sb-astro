---
import RichTextRenderer from "storyblok-rich-text-astro-renderer/RichTextRenderer.astro";
import { storyblokEditable } from "@storyblok/astro";
import { useStoryblokApi } from "@storyblok/astro";

import Toc from "../components/Toc.astro";
import Wysiwyg from "./Wysiwyg.astro";

const { blok } = Astro.props;
const category = blok.category || "hero-teal";

// Fetch the full author data
const storyblokApi = useStoryblokApi();
const { data } = await storyblokApi.get("cdn/stories", {
  by_uuids: blok.authors.join(","),
  version: "published",
});

const authors = data.stories;
---

<article {...storyblokEditable(blok)}>
  <section class={`hero-color ${category}`}>
    <div class="ipu">
      <div>
        <h1 class="headline">{blok.title}</h1>
        {blok.teaser && <p>{blok.teaser}</p>}
        {
          blok.update_date ? (
            <p>
              <strong>Updated on:</strong>{" "}
              {new Date(blok.update_date).toLocaleDateString("en-US", {
                year: "numeric",
                month: "long",
                day: "numeric",
              })}
            </p>
          ) : (
            <p>
              <strong>Published on:</strong>{" "}
              {new Date(blok.publish_date).toLocaleDateString("en-US", {
                year: "numeric",
                month: "long",
                day: "numeric",
              })}
            </p>
          )
        }
      </div>
    </div>
  </section>

  <div class="ipu">
    <strong>By:</strong>
    <div class="author-grid">
      {/* Names row */}
      <div class="author-names">
        {authors.map((author, index) => (
          <span>{author.content.Name.trim()}{authors.length > 1 && index < authors.length - 1 && (
            <span class={index === authors.length - 2 ? "ampersand" : "comma"}>{index === authors.length - 2 ? "&" : ", "}</span>
          )}</span>
        ))}
      </div>

      {/* Headshots row */}
      <div class="author-headshots">
        {
          authors.map((author) => (
            <>
              {author.content.Headshot?.filename && (
                <img
                  src={`${author.content.Headshot.filename}/m/40x40`}
                  alt={author.content.Name}
                  class="profile"
                />
              )}
            </>
          ))
        }
      </div>
    </div>
  </div>

  <div class="container mx-auto mb-12 lg:grid lg:grid-cols-12 lg:gap-10">
    <div class="col-span-4">
      <div class="sticky top-4 h-screen overflow-y-auto overscroll-contain">
        <h2 class="text-2xl text-light-teal font-bold mb-4 font-serif">
          In this article
        </h2>
        <Toc content={blok.post.content} />
      </div>
    </div>
    <section id="article" class="max-width720">
      <Wysiwyg blok={blok} content={blok.post} />
    </section>
  </div>
</article>
